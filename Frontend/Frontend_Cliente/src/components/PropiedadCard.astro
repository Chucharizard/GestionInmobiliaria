---
import type { Propiedad } from '../data/propiedades';

interface Props {
  propiedad: Propiedad;
}

const { propiedad } = Astro.props;

function formatearPrecio(precio: number): string {
  return new Intl.NumberFormat('es-PE', {
    style: 'currency',
    currency: 'USD',
    maximumFractionDigits: 0
  }).format(precio);
}

function obtenerEstadoBadge(estado: string) {
  const badges = {
    activa: { class: 'badge-success', text: 'Disponible' },
    reservada: { class: 'badge-warning', text: 'Reservada' },
    vendida: { class: 'badge-error', text: 'Vendida' },
    borrador: { class: 'badge-info', text: 'Borrador' }
  };
  return badges[estado as keyof typeof badges] || badges.activa;
}

const estadoBadge = obtenerEstadoBadge(propiedad.estado);
---

<article class="property-card">
  <a href={`/propiedad/${propiedad.slug}`} class="card-link">
    <div class="card-image">
      <img 
        src={propiedad.imagenPortada} 
        alt={propiedad.titulo}
        loading="lazy"
      />
      <div class="card-badges">
        <span class={`badge ${estadoBadge.class}`}>
          {estadoBadge.text}
        </span>
        <span class="badge badge-info">
          {propiedad.tipoOperacion === 'venta' ? 'Venta' : 'Alquiler'}
        </span>
      </div>
    </div>

    <div class="card-content">
      <div class="card-header">
        <h3 class="card-title">{propiedad.titulo}</h3>
        <p class="card-location">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
            <circle cx="12" cy="10" r="3"></circle>
          </svg>
          {propiedad.zona}
        </p>
      </div>

      <p class="card-description">
        {propiedad.descripcionBreve}
      </p>

      <div class="card-features">
        {propiedad.dormitorios > 0 && (
          <div class="feature">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
              <polyline points="9 22 9 12 15 12 15 22"></polyline>
            </svg>
            <span>{propiedad.dormitorios} dorm.</span>
          </div>
        )}
        {propiedad.banos > 0 && (
          <div class="feature">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 6L9 3"></path>
              <path d="M15 6L15 3"></path>
              <path d="M2 12h20"></path>
              <path d="M6 12v9"></path>
              <path d="M18 12v9"></path>
            </svg>
            <span>{propiedad.banos} baños</span>
          </div>
        )}
        <div class="feature">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
          </svg>
          <span>{propiedad.superficieTotal} m²</span>
        </div>
      </div>

      <div class="card-footer">
        <p class="card-price">{formatearPrecio(propiedad.precio)}</p>
        <span class="btn btn-outline btn-sm">Ver detalle</span>
      </div>
    </div>
  </a>
</article>

<style>
  .property-card {
    background-color: var(--color-bg);
    border: 2px solid transparent;
    border-radius: var(--border-radius-xl);
    overflow: hidden;
    transition: all var(--transition-base);
    position: relative;
  }

  .property-card::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: var(--border-radius-xl);
    padding: 2px;
    background: linear-gradient(135deg, var(--color-secondary), var(--color-accent));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity var(--transition-base);
  }

  .property-card:hover {
    box-shadow: 0 16px 48px rgba(16, 185, 129, 0.15);
    transform: translateY(-8px);
  }

  .property-card:hover::before {
    opacity: 1;
  }

  .card-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .card-image {
    position: relative;
    width: 100%;
    aspect-ratio: 4 / 3;
    overflow: hidden;
    background: linear-gradient(135deg, rgba(15, 23, 42, 0.1) 0%, rgba(16, 185, 129, 0.1) 100%);
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition-slow);
  }

  .property-card:hover .card-image img {
    transform: scale(1.1);
  }

  .card-badges {
    position: absolute;
    top: var(--spacing-md);
    left: var(--spacing-md);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    align-items: flex-start;
  }

  .card-content {
    padding: var(--spacing-lg);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }

  .card-header {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
  }

  .card-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text);
    margin: 0;
    line-height: var(--line-height-tight);
  }

  .card-location {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
    margin: 0;
  }

  .card-description {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
    line-height: var(--line-height-normal);
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .card-features {
    display: flex;
    gap: var(--spacing-lg);
    padding: var(--spacing-md) 0;
    border-top: var(--border-width) solid var(--color-border);
  }

  .feature {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .card-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-top: var(--spacing-md);
    border-top: var(--border-width) solid var(--color-border);
  }

  .card-price {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    background: linear-gradient(135deg, var(--color-secondary) 0%, var(--color-secondary-dark) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0;
  }

  .btn-sm {
    padding: var(--spacing-xs) var(--spacing-md);
    font-size: var(--font-size-sm);
  }
</style>
